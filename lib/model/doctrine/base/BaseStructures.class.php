<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class BaseStructures extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('patbati.structures');
        $this->hasColumn('indexstructure', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('codeconservation', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'notnull' => true,
             ));
        $this->hasColumn('codematge', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'notnull' => true,
             ));
        $this->hasColumn('codestructure', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'notnull' => true,
             ));
        $this->hasColumn('codemeo', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'notnull' => true,
             ));
        $this->hasColumn('indexbatiment', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'notnull' => true,
             ));
        $this->hasColumn('info_structure', 'string', 1000, array(
             'type' => 'string',
             'length' => 1000,
             ));
        $this->hasColumn('structure_rem', 'boolean', null, array(
             'type' => 'boolean',
             ));
    }

    public function setUp()
    {
        parent::setUp();
    $this->hasOne('BibConservation', array(
             'local' => 'codeconservation',
             'foreign' => 'codeconservation'));

        $this->hasOne('BibMateriauxGe', array(
             'local' => 'codematge',
             'foreign' => 'codematge'));

        $this->hasOne('BibStructure', array(
             'local' => 'codestructure',
             'foreign' => 'codestructure'));

        $this->hasOne('BibMeoeuvre', array(
             'local' => 'codemeo',
             'foreign' => 'codemeo'));

        $this->hasOne('Identification', array(
             'local' => 'indexbatiment',
             'foreign' => 'indexbatiment'));

        $this->hasMany('BibMateriauxFins as RelStructuresMatfinss', array(
             'refClass' => 'RelStructuresMatfins',
             'local' => 'indexstructure',
             'foreign' => 'codematfins'));

        $this->hasMany('RelRemplace as RelRemplaces', array(
             'local' => 'indexstructure',
             'foreign' => 'indexstructure_ancien'));
    }
}